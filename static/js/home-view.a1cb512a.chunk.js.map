{"version":3,"file":"static/js/home-view.a1cb512a.chunk.js","mappings":"oSACMA,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAeC,GAC7B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,oBACab,IAIrC,SAASc,EAAmBD,GACjC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,IAI7C,SAASe,EAAsBF,GACpC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,IAI7C,SAASgB,EAAiBC,GAC/B,OAAOhB,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,iCACyCiB,EADzC,kC,2HC/BhB,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAyBC,MAAK,SAAAC,GAAM,OAAIJ,EAAcI,EAAOC,cAC5D,KAGD,iCACE,uDACA,wBACGN,EAAWO,KAAI,SAAAC,GAAI,OAClB,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAKG,IAC1BC,MAAO,CAAEC,KAAMhB,IAHnB,SAMGW,EAAKM,SAPDN,EAAKG","sources":["fetch.js","views/HomeView.js"],"sourcesContent":["// https://api.themoviedb.org/3/movie/550?api_key=cb542dd8e772c4e12648426411bbd60b\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'cb542dd8e772c4e12648426411bbd60b';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function trendingToday() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\n  );\n}\n\nexport function fetchMovieByIdCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\n  );\n}\n\nexport function fetchMovieByIdReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`,\n  );\n}\n\nexport function fetchMovieByName(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport * as MovieAPI from '../fetch.js';\n\nexport default function HomeView() {\n  const location = useLocation();\n  const [movieArray, setMovieArray] = useState([]);\n\n  useEffect(() => {\n    MovieAPI.trendingToday().then(movies => setMovieArray(movies.results));\n  }, []);\n\n  return (\n    <>\n      <h1>Trending Movies for Today</h1>\n      <ul>\n        {movieArray.map(item => (\n          <li key={item.id}>\n            <Link\n              to={{\n                pathname: `/movies/${item.id}`,\n                state: { from: location },\n              }}\n            >\n              {item.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","trendingToday","fetchMovieById","movieId","fetchMovieByIdCast","fetchMovieByIdReviews","fetchMovieByName","query","HomeView","location","useLocation","useState","movieArray","setMovieArray","useEffect","MovieAPI","then","movies","results","map","item","to","pathname","id","state","from","title"],"sourceRoot":""}