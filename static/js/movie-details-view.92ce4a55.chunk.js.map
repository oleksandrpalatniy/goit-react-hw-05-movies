{"version":3,"file":"static/js/movie-details-view.92ce4a55.chunk.js","mappings":"sSACMA,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAeC,GAC7B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,oBACab,IAIrC,SAASc,EAAmBD,GACjC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,IAI7C,SAASe,EAAsBF,GACpC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,IAI7C,SAASgB,EAAiBC,GAC/B,OAAOhB,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,iCACyCiB,EADzC,kC,2HCxBzBC,GAAeC,EAAAA,EAAAA,OAAK,kBACxB,+BAEIC,GAAkBD,EAAAA,EAAAA,OAAK,kBAC3B,gCAGa,SAASE,IAAoB,IAAD,QACnCC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,MACRZ,GAAYa,EAAAA,EAAAA,MAAZb,QACR,GAA0Bc,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQ3B,GAAQ4B,EAAAA,EAAAA,MAAR5B,IAcR,OAZA6B,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAwBnB,GAASoB,KAAKJ,KACrC,CAAChB,IAWFe,IACE,iCACE,mBAAQM,KAAK,SAASC,QAX5B,WACiB,IAAD,IAAVb,EACFE,EAAQY,KAAR,iBAAad,QAAb,IAAaA,GAAb,UAAaA,EAAUe,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,KAEtCd,EAAQY,KAAK,MAOX,6BAGA,wBAAKR,EAAMW,SACX,gBACEC,IAAG,0CAAqCZ,EAAMa,eAC9CC,IAAG,UAAKd,EAAMW,UAEhB,wCAAgBX,EAAMe,iBAEtB,sCACA,uBAAIf,EAAMgB,YAEV,oCACA,wBACGhB,EAAMiB,OAAOC,KAAI,SAAAC,GAAK,OACrB,wBAAoBA,EAAMC,MAAjBD,EAAME,UAInB,oDACA,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKjD,EAAL,SAERmC,MAAO,CAAEC,KAAI,iBAAEhB,QAAF,IAAEA,GAAF,UAAEA,EAAUe,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,MAJ5C,mBASA,mBACA,SAAC,KAAD,CACEY,GAAI,CACFC,SAAS,GAAD,OAAKjD,EAAL,YACRmC,MAAO,CAAEC,KAAI,iBAAEhB,QAAF,IAAEA,GAAF,UAAEA,EAAUe,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,MAH5C,sBAQA,mBACA,UAAC,EAAAc,SAAD,CAAUC,UAAU,wCAApB,WACE,SAAC,KAAD,CAAOC,KAAI,UAAKpD,EAAL,SAAX,UACE,SAACgB,EAAD,CAAcL,QAASA,OAGzB,SAAC,KAAD,CAAOyC,KAAI,UAAKpD,EAAL,YAAX,UACE,SAACkB,EAAD,CAAiBP,QAASA","sources":["fetch.js","views/MovieDetailsPage.js"],"sourcesContent":["// https://api.themoviedb.org/3/movie/550?api_key=cb542dd8e772c4e12648426411bbd60b\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'cb542dd8e772c4e12648426411bbd60b';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function trendingToday() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\n  );\n}\n\nexport function fetchMovieByIdCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\n  );\n}\n\nexport function fetchMovieByIdReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`,\n  );\n}\n\nexport function fetchMovieByName(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { lazy, Suspense } from 'react';\nimport {\n  NavLink,\n  Route,\n  useParams,\n  useRouteMatch,\n  useLocation,\n  useHistory,\n} from 'react-router-dom';\nimport * as MovieAPI from '../fetch.js';\n\nconst MovieSubCast = lazy(() =>\n  import('./MovieSubCast.js' /* webpackChunkName: \"movie-cast\" */),\n);\nconst MovieSubReviews = lazy(() =>\n  import('./MovieSubReviews.js' /* webpackChunkName: \"movie-review\" */),\n);\n\nexport default function MovieDetailsPage() {\n  const location = useLocation();\n  const history = useHistory();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    MovieAPI.fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  function onGoBack() {\n    if (location) {\n      history.push(location?.state?.from ?? '/');\n    } else {\n      history.push('/');\n    }\n  }\n\n  return (\n    movie && (\n      <>\n        <button type=\"button\" onClick={onGoBack}>\n          ‚Üê Go back\n        </button>\n        <h2>{movie.title}</h2>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`}\n          alt={`${movie.title}`}\n        />\n        <p>User score: {movie.vote_average}</p>\n\n        <h3>Owerview</h3>\n        <p>{movie.overview}</p>\n\n        <h3>Genres</h3>\n        <ul>\n          {movie.genres.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n\n        <h4>Additional information</h4>\n        <NavLink\n          to={{\n            pathname: `${url}/cast`,\n            // state: { from: location.state.from },\n            state: { from: location?.state?.from ?? '/' },\n          }}\n        >\n          Cast\n        </NavLink>\n        <br />\n        <NavLink\n          to={{\n            pathname: `${url}/reviews`,\n            state: { from: location?.state?.from ?? '/' },\n          }}\n        >\n          Reviews\n        </NavLink>\n        <hr />\n        <Suspense fallback={<div>Loading...</div>}>\n          <Route path={`${url}/cast`}>\n            <MovieSubCast movieId={movieId} />\n          </Route>\n\n          <Route path={`${url}/reviews`}>\n            <MovieSubReviews movieId={movieId} />\n          </Route>\n        </Suspense>\n      </>\n    )\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","trendingToday","fetchMovieById","movieId","fetchMovieByIdCast","fetchMovieByIdReviews","fetchMovieByName","query","MovieSubCast","lazy","MovieSubReviews","MovieDetailsPage","location","useLocation","history","useHistory","useParams","useState","movie","setMovie","useRouteMatch","useEffect","MovieAPI","then","type","onClick","push","state","from","title","src","backdrop_path","alt","vote_average","overview","genres","map","genre","name","id","to","pathname","Suspense","fallback","path"],"sourceRoot":""}